@model Vidly.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Create New Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create New Customer</h2>
@* Html.BeginForm translated to <form> and returns disposable object so @Using will dispose the object and </form> *@
@using (Html.BeginForm("Save", "Customer"))
{
    //For creating responsive controls we should use bootstrap css classes
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @* new{@class} for adding HTML attributes and @class has @ bec it's reserved MVC attibute *@
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @* Server Side Validation Place holder *@
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthdate)
        @Html.TextBoxFor(m => m.Customer.Birthdate, "{0: dd MMM yyyy}", new { @class = "form-control", @style = "font-family: initial" })
        @Html.ValidationMessageFor(m=>m.Customer.Birthdate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter) Subscribed to NewsLetter?
        </label>
    </div>
    @Html.HiddenFor(m => m.Customer.Id)
    <button type="submit" class="btn btn-primary">Submit</button>
}